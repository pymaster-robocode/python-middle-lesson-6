from functools import wraps

class Player:
    mana = 100

def log_action(func):
    @wraps(func)
    def wrapper(*args, **kwargs):
        print(f"–í–∏–∫–æ–Ω—É—î—Ç—å—Å—è –¥—ñ—è: {func.__name__}")
        return func(*args, **kwargs)
    return wrapper

def magic_effect(times):
    def decorator(func):
        @wraps(func)
        def wrapper(*args, **kwargs):
            for i in range(times):
                print(f"–ú–∞–≥—ñ—á–Ω–∏–π –µ—Ñ–µ–∫—Ç {i+1}/{times}:")
                func(*args, **kwargs)
        return wrapper
    return decorator

class ManaCost:
    def __init__(self, cost):
        self.cost = cost
    def __call__(self, func):
        @wraps(func)
        def wrapper(*args, **kwargs):
            if Player.mana >= self.cost:
                Player.mana -= self.cost
                print(f"-{self.cost} –º–∞–Ω–∏. –ó–∞–ª–∏—à–∏–ª–æ—Å—å: {Player.mana}")
                return func(*args, **kwargs)
            else:
                print("–ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –º–∞–Ω–∏!")
        return wrapper

@log_action
@ManaCost(30)
@magic_effect(2)
def firestorm():
    print("üî•üå™ –í–æ–≥–Ω—è–Ω–∏–π —à—Ç–æ—Ä–º!")

@log_action
@ManaCost(50)
def heal():
    print("üíñ –ì—Ä–∞–≤–µ—Ü—å –≤—ñ–¥–Ω–æ–≤–∏–≤ –∑–¥–æ—Ä–æ–≤'—è!")

# –ú–µ–Ω—é
while True:
    print("\n=== –î—ñ—ó ===")
    print("1. –í–æ–≥–Ω—è–Ω–∏–π —à—Ç–æ—Ä–º")
    print("2. –õ—ñ–∫—É–≤–∞–Ω–Ω—è")
    print("3. –í–∏–π—Ç–∏")
    choice = input("–û–±–µ—Ä—ñ—Ç—å –¥—ñ—é: ")
    if choice == "1":
        firestorm()
    elif choice == "2":
        heal()
    elif choice == "3":
        break
